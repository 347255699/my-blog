(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{364:function(s,a,e){"use strict";e.r(a);var t=e(9),n=Object(t.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("p",[s._v("使用 docker 和 docker-compose 也有一段时间了，终于挤出时间把 k8s 安排上了。🐶")]),s._v(" "),e("p",[s._v("这里我在物理机上开了两台 ubuntu18 虚拟机用于搭建 k8s 环境。一台作为控制平面，一台作为工作机。")]),s._v(" "),e("p",[s._v("首先我们需要确保机器上安装有 docker，关于 docker 如何安装就不再赘述；直奔主题。")]),s._v(" "),e("h2",{attrs:{id:"安装-k8s-组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装-k8s-组件"}},[s._v("#")]),s._v(" 安装 k8s 组件")]),s._v(" "),e("p",[s._v("国内安装 k8s 还是十分不方便的，这里我们使用 aliyun apt source 来加速安装过程。")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 先切换为 root，接下来大部分流程都需要在 root 下面完成")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("su")]),s._v("\n")])])]),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" update "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y apt-transport-https\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" apt-key "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" - \n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("EOF "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/etc/apt/sources.list.d/kubernetes.list\ndeb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main\nEOF  \n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" update\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y kubelet kubeadm kubectl\n")])])]),e("blockquote",[e("p",[s._v("因为咱们是萌新，所以还是使用 kubeadm 这种傻瓜式工具来安装。")])]),s._v(" "),e("h2",{attrs:{id:"kubeadm-init"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kubeadm-init"}},[s._v("#")]),s._v(" kubeadm init")]),s._v(" "),e("p",[s._v("初始化 k8s 环境前我们需要先准备下。")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 关闭 swap")]),s._v("\nswapoff -a\n")])])]),e("p",[s._v("设置 cgroup driver 为 systemd，默认 docker 使用的是 cgroupfs。")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" /etc/docker/daemon.json\n")])])]),e("p",[s._v("插入如下 json:")]),s._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[s._v('"exec-opts"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"native.cgroupdriver=systemd"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("systemctl restart docker\n")])])]),e("p",[s._v("默认 kubeadm 会到 google 仓库去拉取静态 pod 使用到的镜像，因为墙的关系，我们需要提前从别处拉取镜像。")]),s._v(" "),e("p",[s._v("这里我只找到一个合适的仓库：")]),s._v(" "),e("div",{staticClass:"language-http extra-class"},[e("pre",{pre:!0,attrs:{class:"language-http"}},[e("code",[s._v("registry.aliyuncs.com/google_containers\n")])])]),e("p",[s._v("接下我们我们先观察下 kubeadm 需要使用到的镜像列表:")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("menfre@master:~$ kubeadm config images list\nk8s.gcr.io/kube-apiserver:v1.20.2\nk8s.gcr.io/kube-controller-manager:v1.20.2\nk8s.gcr.io/kube-scheduler:v1.20.2\nk8s.gcr.io/kube-proxy:v1.20.2\nk8s.gcr.io/pause:3.2\nk8s.gcr.io/etcd:3.4.13-0\nk8s.gcr.io/coredns:1.7.0\n")])])]),e("p",[s._v("Ok, 我们知道 kubeadm 会用到哪些镜像后就可以提前拉取了，这里我们通过如下脚本来完成这个动作：")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" ~/pull.sh\n")])])]),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("images")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    kube-apiserver:v1.18.6\n    kube-controller-manager:v1.18.6\n    kube-scheduler:v1.18.6\n    kube-proxy:v1.18.6\n    pause:3.2\n    etcd:3.4.3-0\n    coredns:1.6.7\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("imageName")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${images"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("@"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n    docker pull googlecontainersmirror/"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$imageName")]),s._v("\n    docker tag googlecontainersmirror/"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$imageName")]),s._v(" k8s.gcr.io/"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$imageName")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])])]),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("./pull.sh\n")])])]),e("p",[s._v("这个脚本帮我们做了两件事，它帮我们拉取了目标镜像，然后通过 docker tag 将镜像的名字还原成 k8s.gcr.io 前缀。")]),s._v(" "),e("p",[s._v("开始 init：")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("kubeadm init --pod-network-cidr"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.244")]),s._v(".0.0/16\n")])])]),e("blockquote",[e("p",[s._v("切记这里一定要分配 pod 网段，不然接下来安装 flannel 网络插件将无法成功。")])]),s._v(" "),e("p",[s._v("顺利的话你会见到如下信息，记得备份起来。")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("Your Kubernetes control-plane has initialized successfully"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n\nTo start using your cluster, you need to run the following as a regular user:\n\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p "),e("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v("/.kube\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" -i /etc/kubernetes/admin.conf "),e("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v("/.kube/config\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("chown")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" -u"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" -g"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v(" "),e("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v("/.kube/config\n\nYou should now deploy a pod network to the cluster.\nRun "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"kubectl apply -f [podnetwork].yaml"')]),s._v(" with one of the options listed at:\n  https://kubernetes.io/docs/concepts/cluster-administration/addons/\n\nThen you can "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("join")]),s._v(" any number of worker nodes by running the following on each as root:\n\nkubeadm "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("join")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".3.46:6443 --token huosj5.krvkm8dr9olvyutw "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    --discovery-token-ca-cert-hash sha256:609c8eb6dd96c62bc6f27e52fc9be91bfe08f80be99e7a5bae86ee65c4b3d675\n")])])]),e("blockquote",[e("p",[s._v("kubeadm init 大概帮我们完成如下事情。")]),s._v(" "),e("ul",[e("li",[s._v("预检查，以确保当前机器环境满足安装条件")]),s._v(" "),e("li",[s._v("设置 kubelet 并重启")]),s._v(" "),e("li",[s._v("生成 ca 自签证书和服务器客户端证书用于 k8s 组件之间以及各节点之间身份识别")]),s._v(" "),e("li",[s._v("配置 k8s 各组件以及管理员信息")]),s._v(" "),e("li",[s._v("启动控制平面用到的三个静态 pod，api-server/controller-manager/scheduler")]),s._v(" "),e("li",[s._v("启动本地 etcd 静态 pod")]),s._v(" "),e("li",[s._v("上传 kubeadm/kubelet 配置为 ConfigMap")]),s._v(" "),e("li",[s._v("上传证书到 kubeadm-certs")]),s._v(" "),e("li",[s._v("标记当前节点为控制平面")]),s._v(" "),e("li",[s._v("生成临时 token，便于其他节点通过 token 加入集群")]),s._v(" "),e("li",[s._v("设置 kubelet 客户端证书为可用状态")]),s._v(" "),e("li",[s._v("安装必要的插件，coredns/kube-proxy")])])]),s._v(" "),e("h2",{attrs:{id:"安装-pod-网络插件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装-pod-网络插件"}},[s._v("#")]),s._v(" 安装 Pod 网络插件")]),s._v(" "),e("p",[s._v("安装插件前先配置下本地 hosts，确保 raw.githubusercontent.com 域名可用。")]),s._v(" "),e("div",{staticClass:"language-txt extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("199.232.68.133 raw.githubusercontent.com\n")])])]),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml\n")])])]),e("p",[s._v("Flannel pod 使用到的镜像会从仓库 quay.io 拉取，可能会有点慢，可以临时备个梯子加速下。")]),s._v(" "),e("h2",{attrs:{id:"kubeadm-join"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kubeadm-join"}},[s._v("#")]),s._v(" kubeadm join")]),s._v(" "),e("p",[s._v("同样的，我们其他机器需要先安装好 docker，以及 k8s 各个组件。可以把 【安装 k8s 组件】章节的命令再运行一遍。")]),s._v(" "),e("p",[s._v("同样的 worker 节点也需要安装有 kube-proxy/pause 等网络 pod。")]),s._v(" "),e("p",[s._v("通过如下脚本安装：")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" ~/pull.sh\n")])])]),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("images")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    kube-proxy:v1.18.6\n    pause:3.2\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("imageName")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${images"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("@"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n    docker pull googlecontainersmirror/"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$imageName")]),s._v("\n    docker tag googlecontainersmirror/"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$imageName")]),s._v(" k8s.gcr.io/"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$imageName")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])])]),e("blockquote",[e("p",[s._v("worker 节点安装的 k8s 版本最好与 master 节点的保持一致。")])]),s._v(" "),e("p",[s._v("将前面备份的关键信息黏贴到 worker 并执行 join 操作。")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("kubeadm "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("join")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".3.46:6443 --token huosj5.krvkm8dr9olvyutw "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    --discovery-token-ca-cert-hash sha256:609c8eb6dd96c62bc6f27e52fc9be91bfe08f80be99e7a5bae86ee65c4b3d675\n")])])]),e("p",[s._v("最后我们通过 kubectl get nodes 和 kubectl get --namespace kube-system pods 看下部署结果吧。")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("NAME     STATUS   ROLES    AGE     VERSION\nmaster   Ready    master   3h59m   v1.18.6\nworker   Ready    "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("   3h25m   v1.18.6\n")])])]),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("NAME                             READY   STATUS    RESTARTS   AGE\ncoredns-66bff467f8-4bs7n         "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          3h59m\ncoredns-66bff467f8-dtfl9         "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          3h59m\netcd-master                      "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          3h59m\nkube-apiserver-master            "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          3h59m\nkube-controller-manager-master   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          3h59m\nkube-flannel-ds-amd64-5tzmx      "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          3h53m\nkube-flannel-ds-amd64-ndpzg      "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          3h26m\nkube-proxy-4kckl                 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          3h59m\nkube-proxy-bkjwt                 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          3h26m\nkube-scheduler-master            "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          3h59m\n")])])]),s._v(" "),e("comment"),s._v(" "),e("comment")],1)}),[],!1,null,null,null);a.default=n.exports}}]);