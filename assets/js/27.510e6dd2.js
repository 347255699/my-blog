(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{365:function(t,a,s){"use strict";s.r(a);var n=s(9),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("相信大家对 docker 都有所了解，😏 ​或早已轻车熟路了。那我们就直奔主题。这里之所以要容器化，目标是想借助 k8s 的容器编排在多个节点间来管理和运维错综复杂的应用关系。当然我们离使用 k8s 还有一定的距离，这里我们先迈出容器化这一小步。")]),t._v(" "),s("p",[t._v("这里以 spring 项目为例。")]),t._v(" "),s("h2",{attrs:{id:"编写-dockerfile"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编写-dockerfile"}},[t._v("#")]),t._v(" 编写 Dockerfile")]),t._v(" "),s("p",[t._v("Dockerfile 是 docker 用来定义如何打包容器镜像的命令集合。内容如下：")]),t._v(" "),s("div",{staticClass:"language-dockerfile extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" openjdk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("8"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("jdk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("alpine\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WORKDIR")]),t._v(" /app\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ARG")]),t._v(" JAR_FILE=target/*.jar\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COPY")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("JAR_FILE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" app.jar\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPOSE")]),t._v(" 9091\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENTRYPOINT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sh"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-c"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"java -jar ./app.jar ${0} ${@}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("ol",[s("li",[t._v("FROM 命令的作用是指定在哪个已有的镜像上进行打包，这里我们是打包 Java 项目，自然需要在 jdk 环境上进行打包。alpine 版本通常是指精简过的镜像版本，适用于二次打包的需求")]),t._v(" "),s("li",[t._v("WORKDIR 命令的作用是定义工作目录，往后的命令都会在所定义的工作目录下运行")]),t._v(" "),s("li",[t._v("ARG 声明参数，可以在使用 docker build 的时候传递命令行参数，可以通过 =target/*.jar 来声明默认值")]),t._v(" "),s("li",[t._v("COPY 命令用于将打包上下文中的内容拷贝到镜像中")]),t._v(" "),s("li",[t._v("EXPOSE 无实际作用，类似注释的存在，仅仅告诉你当前应用工作在 9091 端口")]),t._v(" "),s("li",[t._v("ENTRYPOINT 定义容器运行时所执行的命令以及命令参数；${0}${@} 均是占位符，${0} 指在 docker run 时最后面跟的 cmd 补充到当前位置，${@} 指将 docker run cmd 之后的所有参数都补充到当前位置。")])]),t._v(" "),s("blockquote",[s("p",[t._v("这里使用 ${0} ${@} 来传递命令和命令参数是贴近 supervisor 的做法。如 supervisor 中我们会通过 java -jar xxx.jar --spring.profiles.active=prod 来传递参数，容器化后我们仍然可以通过类似的 docker run -p 9091:9091 -d --name xxxx-server xxxx-server:latest --spring.profiles.active=prod 的方式来启动容器。")]),t._v(" "),s("p",[t._v("我们可以使用 openjdk:8u252-jre-slim 来替换 openjdk:8-jdk-alpine，可以进一步缩小镜像体积。")])]),t._v(" "),s("h2",{attrs:{id:"docker-build"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-build"}},[t._v("#")]),t._v(" docker build")]),t._v(" "),s("p",[t._v("有了 Dockerfile 后，我们就可以使用 docker build 来打包镜像了，通常我们会将 Dockerfile 文件放在项目根目录下。如下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/image/project-directory.jpg",alt:"project-directory"}})]),t._v(" "),s("p",[t._v("此时我们可以 cd 到 spring-demo 目录下，执行 "),s("code",[t._v("docker build -t spring-demo:1.0-SHAPSHOT .")]),t._v("，😩 如无意外你会翻车。如下所示：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/image/docker-build-failed.jpg",alt:"docker-build-failed"}})]),t._v(" "),s("p",[t._v("这里我们 COPY 命令是将 target/ 目录下的可执行 jar 拷贝到镜像中，所以在执行 docker build 之前需要先 package 一下，确保 target 文件夹下已经存在可执行 jar 了。如下是已经打好的镜像。")]),t._v(" "),s("p",[s("img",{attrs:{src:"/image/docker-images.jpg",alt:"docker-images"}})]),t._v(" "),s("p",[t._v("当然直接通过 "),s("code",[t._v("docker build")]),t._v(" 方式还不够方便，有时会遗忘 package 这个操作，而且还要手动打 tag。🌟 ​此时聪明的 Java 程序员就会寻找 maven 插件了，只要我们将 build 这个操作跟 package 生命周期绑定在一起不就可以了吗。")]),t._v(" "),s("p",[t._v("接下来我们会使用 "),s("code",[t._v("dockerfile-maven-plugin")]),t._v(" 插件来代替 docker build。")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("properties")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("docker.repository")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("harbor.[your-domain].com"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("docker.repository")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("docker.image.prefix")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("my-project"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("docker.image.prefix")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("properties")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("plugin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("com.spotify"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("dockerfile-maven-plugin"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("${dockerfile-maven-version}"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("executions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("execution")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("default"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("goals")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("goal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("build"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("goal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- <goal>push</goal> --\x3e")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("goals")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("execution")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("executions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("configuration")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("repository")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("${docker.repository}/${docker.image.prefix}/${project.artifactId}"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("repository")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("tag")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("${project.version}"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("tag")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("buildArgs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("JAR_FILE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("target/${project.build.finalName}.jar"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("JAR_FILE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("buildArgs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("useMavenSettingsForAuth")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("true"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("useMavenSettingsForAuth")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("configuration")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("plugin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("关于 "),s("code",[t._v("dockerfile-maven-plugin")]),t._v(" 的使用我们不做过多的赘述，如有疑问 "),s("a",{attrs:{href:"https://github.com/spotify/dockerfile-maven",target:"_blank",rel:"noopener noreferrer"}},[t._v("出门左转!!!"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("这里我们需要注意的是 harbor.[your-domain].com，这是我们为容器准备的私库。我们的镜像在本地调试完成后，可以直接 push 到私库。当然 push 之前你需要取得 harbor 账户。关于 harbor 如何安装部署，可自行 google，将 [your-domain] 替换成你的 harbor 访问域名即可。")]),t._v(" "),s("p",[s("code",[t._v("<useMavenSettingsForAuth>true</useMavenSettingsForAuth>")]),t._v(" 这里声明使用 Maven settings 方式登录。因此我们需要将账户配置在 Maven settings.xml 中。")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("harbor.[your-domain].com"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("username")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("menfre"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("username")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("password")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("********"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("password")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("OK，如无意外你会成功将镜像推送到 harbor, 日后你只需要在任意服务器 docker login and docker pull 就可以将镜像拉取下来执行了。")]),t._v(" "),s("h3",{attrs:{id:"dockerignore"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dockerignore"}},[t._v("#")]),t._v(" .dockerignore")]),t._v(" "),s("p",[t._v("我们打包镜像时可以在根目录编辑一个 .dockerignore。它的作用是在打包时将不必要的文件和文件夹过滤掉，避免发送给 docker deamon 的打包上下文过大。(docker 实际是一个 cs 结构，其中包含  dockerctl 和 deamon，docker build 执行的过程中会将指定的上下文整个发送给 deamon 完成打包)")]),t._v(" "),s("blockquote",[s("p",[t._v("NOTE: 在使用私库前，需要先将私库配置在 docker 的 daemon.json 中。然后通过 "),s("code",[t._v("docker login harbor.[your-domain].com")]),t._v(" 完成登录。")])]),t._v(" "),s("h2",{attrs:{id:"docker-run"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-run"}},[t._v("#")]),t._v(" docker run")]),t._v(" "),s("p",[t._v("有了镜像之后，我们就可以方便的分发和运行容器啦。")]),t._v(" "),s("p",[t._v("假设我们已经将镜像推送到我们的私库中，这里我们以 harbor.[your-domain].com/my-project/spring-demo:1.0-SNAPSHOT 为例。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("docker run -d --network"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("host --name spring-demo harbor."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("your-domain"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".com/my-project/spring-demo:1.0-SNAPSHOT --spring.profiles.active"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("container\n")])])]),s("ol",[s("li",[t._v("-d 后台运行")]),t._v(" "),s("li",[t._v("--network=host 设置与宿主机同个 network namespace")]),t._v(" "),s("li",[t._v("--name 容器取名为 spring-demo")]),t._v(" "),s("li",[t._v("--spring.profiles.active=container，指定 spring profile 为 container，这里可以为 spring 项目指定任意配置参数")])]),t._v(" "),s("p",[t._v("查看日志可以通过 "),s("code",[t._v("docker logs -f [容器ID]")]),t._v(" 命令。")]),t._v(" "),s("p",[t._v("看到这恭喜你，迈出了容器化的一小步。👏 👏 👏")]),t._v(" "),s("comment"),t._v(" "),s("comment")],1)}),[],!1,null,null,null);a.default=e.exports}}]);