(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{358:function(t,a,s){"use strict";s.r(a);var n=s(9),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("Cobra 是 Golang 中用来创建 CLI 应用的框架，Cobra 本身也是一个应用，用于创建 CLI 应用脚手架。")]),t._v(" "),s("p",[t._v("Quicky Start:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("go get -u github.com/spf13/cobra/cobra\n")])])]),s("h2",{attrs:{id:"几个重要概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#几个重要概念"}},[t._v("#")]),t._v(" 几个重要概念")]),t._v(" "),s("p",[t._v("Cobra 中有几个比较重要的概念。")]),t._v(" "),s("ul",[s("li",[t._v("commands：行为")]),t._v(" "),s("li",[t._v("arguments：命令行参数")]),t._v(" "),s("li",[t._v("flags：命令行选项")])]),t._v(" "),s("p",[t._v("执行命令行的一般格式为：")]),t._v(" "),s("p",[t._v("APPNAME COMMAND ARG --FLAG")]),t._v(" "),s("p",[t._v("如下所示：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# server 是 command, port 是 flag")]),t._v("\nhugo server --port"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1313")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# clone 是 command, URL 是 argument, bare 是 flags")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone URL --bare\n")])])]),s("p",[t._v("一个拥有较多功能的 CLI 应用可以根据功能被划分为多个 command。command 又有自己的可选项和接收参数。")]),t._v(" "),s("h2",{attrs:{id:"创建-cobra-应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建-cobra-应用"}},[t._v("#")]),t._v(" 创建 Cobra 应用")]),t._v(" "),s("p",[t._v("前面我们说了，cobra 是一个创建 CLI 应用脚手架的应用。因此我们用它来创建我们自己的 CLI 应用")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" ~/workbench/gobench/src "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" cobrademo\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建应用")]),t._v("\ncobra init cobrademo --pkg-name cobrademo\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" cobrademo/ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v("\n")])])]),s("p",[t._v("创建成功后，你能看到如下目录：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("LICENSE\tcmd\tmain.go\n")])])]),s("p",[t._v("这个时候我们用 IDE 打开一下。")]),t._v(" "),s("p",[s("img",{attrs:{src:"/image/cobra-structure.jpg",alt:"project-structure"}})]),t._v(" "),s("p",[t._v("Cobra 创建的目录中没有 go.mod，这里我们可以执行如下命令手动创建并更新依赖。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("go mod init "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" go mod tidy\n")])])]),s("p",[t._v("接下来我们执行程序可以看到如下信息：")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("examples and usage of using your application. For example:\n\nCobra is a CLI library for Go that empowers applications.\nThis application is a tool to generate the needed files\nto quickly create a Cobra application.\n")])])]),s("h2",{attrs:{id:"创建-commands"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建-commands"}},[t._v("#")]),t._v(" 创建 Commands")]),t._v(" "),s("p",[t._v("Ok，这时我们的 CLI 应用还没有任何 commands，我们可以用 Cobra 来创建。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("cobra "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" serve\ncobra "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" gen\n")])])]),s("p",[t._v("创建完成后你会看到在 /cmd 文件夹中多了两个 go 源码文件，gen.go 和 serve.go。")]),t._v(" "),s("h3",{attrs:{id:"添加具体功能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加具体功能"}},[t._v("#")]),t._v(" 添加具体功能")]),t._v(" "),s("p",[t._v("接下里我们需要为这两个 commands 编写功能。")]),t._v(" "),s("p",[t._v("我们打开 gen.go 如下：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" cmd\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"github.com/spf13/cobra"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// genCmd represents the gen command")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" genCmd "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("cobra"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tUse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gen"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tShort"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A brief description of your command"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tLong"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`A longer description that spans multiple lines and likely contains examples\nand usage of using your command. For example:\n\nCobra is a CLI library for Go that empowers applications.\nThis application is a tool to generate the needed files\nto quickly create a Cobra application.`")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tRun"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cmd "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("cobra"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Your input are %s\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\trootCmd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("AddCommand")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("genCmd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Here you will define your flags and configuration settings.")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Cobra supports Persistent Flags which will work for this command")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// and all subcommands, e.g.:")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// genCmd.PersistentFlags().String("foo", "", "A help for foo")')]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Cobra supports local flags which will only run when this command")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// is called directly, e.g.:")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// genCmd.Flags().BoolP("toggle", "t", false, "Help message for toggle")')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("可以看到 genCmd 中的 Run 函数，我们需要在这里添加具体的功能。这里我们原样输出 gen 命令的参数。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 编译一下")]),t._v("\ngo build\n./cobrademo gen helle world\n")])])]),s("p",[t._v("你会得到如下结果：")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Your input are [helle world]\n")])])]),s("h2",{attrs:{id:"创建-flags"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建-flags"}},[t._v("#")]),t._v(" 创建 flags")]),t._v(" "),s("p",[t._v("前面我们创建两个 commands，接下来我们可以为这两个 commands 创建 flags。")]),t._v(" "),s("p",[t._v("根据不同作用域，flags 可以分层两类：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("persistent")]),t._v("：全局")]),t._v(" "),s("li",[s("strong",[t._v("local")]),t._v("：局部")])]),t._v(" "),s("p",[t._v("persistent 类型的 flags 可以分配给一个父 cmd，这样这个 flag 对于此 cmd 下的所有子 cmd 都是可用的。如果需要分配一个全局 flag，可以分配给 rootCmd。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" Verbose "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v("\nrootCmd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("PersistentFlags")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("BoolVarP")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("Verbose"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"verbose"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"v"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"verbose output"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("local 类型的 flags 只能分配给指定的 cmd。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" Source "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\nlocalCmd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Flags")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("StringVarP")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("Source"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"source"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"s"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Source directory to read from"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"参数校验器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参数校验器"}},[t._v("#")]),t._v(" 参数校验器")]),t._v(" "),s("p",[t._v("Cobra 提供了一组参数用于快速校验命令的参数。")]),t._v(" "),s("ul",[s("li",[t._v("NoArgs - 如果存在任何位置参数，该命令将报错")]),t._v(" "),s("li",[t._v("ArbitraryArgs - 该命令会接受任何位置参数")]),t._v(" "),s("li",[t._v("OnlyValidArgs - 如果有任何位置参数不在命令的 ValidArgs 字段中，该命令将报错")]),t._v(" "),s("li",[t._v("MinimumNArgs(int) - 至少要有 N 个位置参数，否则报错")]),t._v(" "),s("li",[t._v("MaximumNArgs(int) - 如果位置参数超过 N 个将报错")]),t._v(" "),s("li",[t._v("ExactArgs(int) - 必须有 N 个位置参数，否则报错")]),t._v(" "),s("li",[t._v("ExactValidArgs(int) 必须有 N 个位置参数，且都在命令的 ValidArgs 字段中，否则报错")]),t._v(" "),s("li",[t._v("RangeArgs(min, max) - 如果位置参数的个数不在区间 min 和 max 之中，报错")])]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" cmdTimes "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("cobra"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    Use"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" …\n    Short"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" …\n    Long"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" …\n    Args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" cobra"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("MinimumNArgs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    Run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" …\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("让然你也可以添加一个 func(cmd *cobra.Command, args []string) error {} 作为参数校验器。")]),t._v(" "),s("p",[t._v("Ok，到这里我们基本掌握如何使用 Cobra 了。")]),t._v(" "),s("h2",{attrs:{id:"参考资料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),s("ol",[s("li",[s("a",{attrs:{href:"https://github.com/spf13/cobra",target:"_blank",rel:"noopener noreferrer"}},[t._v("cobra官方"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.cnblogs.com/sparkdev/p/10856077.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("sparkdev"),s("OutboundLink")],1)])]),t._v(" "),s("comment"),t._v(" "),s("comment")],1)}),[],!1,null,null,null);a.default=e.exports}}]);